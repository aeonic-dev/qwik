"use strict"; class qwik { static say(o) { alert(o) } static ask(o, t = "") { return prompt(o, t) } static get(o) { return document.querySelector(o) } static getAll(o) { return document.querySelectorAll(o) } static forAll(o, t) { document.querySelectorAll(o).forEach(t) } static eLambda(o) { return t => o(t.target) } } var q = qwik; qwik.w = class { static getUrl() { return window.location.href } static setUrl(o) { var t = this.getUrl(); return window.location.href = o, t } static getHash() { return !!window.location.hash && window.location.hash.substr(1) } static getParam(o) { var t = new URLSearchParams(window.location.search); return !!t.has(o) && t.get(o) } }, Element.prototype.html = function (o) { var t = this.innerHTML; return this.innerHTML = o, t }, Element.prototype.setOn = function (o) { var t = this.disabled; return this.disabled = !o, !o == t }, Element.prototype.isOn = function () { return !this.disabled }, Element.prototype.on = function (o, t) { return this.addEventListener(o, t) }, Element.prototype.addClass = function (o) { var t = this.classList.contains(o); return this.classList.add(o), !t }, Element.prototype.delClass = function (o) { var t = this.classList.contains(o); return this.classList.remove(o), t }, Element.prototype.hasClass = function (o) { return this.classList.contains(o) }, Element.prototype.toggleClass = function (o) { return this.hasClass(o) ? this.delClass(o) : this.addClass(o) }, Element.prototype.swapClass = function (o, t) { return this.classList.replace(a, b) }, qwik.c = class { }, qwik.c.log = Function.prototype.bind.call(console.log, console), qwik.c.dir = Function.prototype.bind.call(console.dir, console), qwik.c.xml = Function.prototype.bind.call(console.dirxml, console), qwik.c.warn = Function.prototype.bind.call(console.warn, console), qwik.c.err = Function.prototype.bind.call(console.error, console), qwik.c.clear = Function.prototype.bind.call(console.clear, console), qwik.c.tStart = Function.prototype.bind.call(console.time, console), qwik.c.tEnd = Function.prototype.bind.call(console.timeEnd, console), qwik.c.tLog = Function.prototype.bind.call(console.timeLog, console), qwik.c.table = Function.prototype.bind.call(console.table, console), qwik.c.count = Function.prototype.bind.call(console.count, console), qwik.c.cReset = Function.prototype.bind.call(console.countReset, console), qwik.c.gStart = Function.prototype.bind.call(console.group, console), qwik.c.gCollapsed = Function.prototype.bind.call(console.groupCollapsed, console), qwik.c.gEnd = Function.prototype.bind.call(console.groupEnd, console), qwik.c.debug = Function.prototype.bind.call(console.debug, console), qwik.c.pStart = Function.prototype.bind.call(console.profile, console), qwik.c.pEnd = Function.prototype.bind.call(console.profileEnd, console), qwik.c.trace = Function.prototype.bind.call(console.trace, console), qwik.c.assert = Function.prototype.bind.call(console.assert, console), qwik.c.tStamp = Function.prototype.bind.call(console.timeStamp, console);